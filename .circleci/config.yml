version: 2
jobs:
  build:
    working_directory: ~/api.get-native.com
    docker:
      - image: node:8.2.1
        environment:
          - NODE_ENV: test
      - image: mysql:5.7
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: yes
          - MYSQL_USER: get_native
          - MYSQL_PASSWORD: get_native
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt-get update -y
            apt-get install -y libav-tools
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install node modules
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - .node_modules
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Generate JWT keypair
          command: ./bin/generate-jwt-keypair.bash
      - run:
          name: Setup DB
          command: |
            mysql -u root -e 'DROP DATABASE get_native_test'
            mysql -u root -e 'CREATE DATABASE get_native_test DEFAULT CHARACTER SET utf8mb4'
            mysql -u root -e "GRANT ALL PRIVILEGES ON get_native_test.* TO get_native@localhost IDENTIFIED BY 'get_native'"
            cp config/database.json.template config/database.json
            npm run sequelize db:migrate
  test:
    docker:
      - image: node:8.2.1
        environment:
          - NODE_ENV: circle_ci
    steps:
      - checkout
      - run:
          name: Test
          command: npm test

   #   - deploy:
   #       name: Deploy to staging environment
   #       command: |
   #         if [ "${CIRCLE_BRANCH}" == "staging" ]; then
   #           git clone git@github.com:hank-ehly/get-native.com-devops.git
   #           cd get-native.com-devops/deploy && bundle install --jobs 4 --retry 3 --path vendor/bundle && bundle exec cap server:staging deploy
   #         fi
