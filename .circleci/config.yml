version: 2
jobs:
  build:
    working_directory: ~/api.getnativelearning.com
    docker:
      - image: circleci/ruby:2.3.4
        environment:
          - NODE_ENV: test
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: yes
          - MYSQL_USER: get_native
          - MYSQL_PASSWORD: get_native
          - MYSQL_ROOT_HOST: "%"
          - MYSQL_DATABASE: get_native_test
    branches:
      only:
        - master
        - develop
    steps:
      - checkout
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y build-essential libav-tools
      - run:
          name: Install Node.js
          command: |
              curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              nvm install 8.3.0 && nvm alias default 8.3.0
              node -v
      - restore_cache:
          keys:
              - api.getnativelearning.com-{{ .Branch }}-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: api.getnativelearning.com-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - "node_modules"
      - run: ./bin/generate-jwt-keypair.bash
      - run:
          name: Setup DB
          command: |
            cp config/database.json.template config/database.json
            npm run sequelize db:migrate
      - run: npm test
      - deploy:
          name: Deploy
          command: |
              if [ "${CIRCLE_BRANCH}" == "develop" ]; then
                    git clone git@github.com:hank-ehly/devops.getnativelearning.com.git
                    cd devops.getnativelearning.com/deploy && bundle install --jobs 4 --retry 3 --path vendor/bundle && bundle exec cap server:staging deploy
              elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                    git clone git@github.com:hank-ehly/devops.getnativelearning.com.git
                    cd devops.getnativelearning.com/deploy && bundle install --jobs 4 --retry 3 --path vendor/bundle && bundle exec cap server:production deploy
              fi
